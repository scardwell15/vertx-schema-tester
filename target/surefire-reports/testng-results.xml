<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="42" passed="41" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-30T13:21:42 EDT" name="Command line suite" finished-at="2021-07-30T13:21:42 EDT" duration-ms="178">
    <groups>
    </groups>
    <test started-at="2021-07-30T13:21:42 EDT" name="Command line test" finished-at="2021-07-30T13:21:42 EDT" duration-ms="178">
      <class name="com.mycompany.vertxschematester.AtsssCapabilityNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.AtsssCapabilityNGTest@708400f6]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.AtsssCapabilityNGTest -->
      <class name="com.mycompany.vertxschematester.InvalidParamNGTest">
        <test-method signature="TestValidJson()[pri:0, instance:com.mycompany.vertxschematester.InvalidParamNGTest@4218500f]" started-at="2021-07-30T13:21:42 EDT" name="TestValidJson" finished-at="2021-07-30T13:21:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestValidJson -->
      </class> <!-- com.mycompany.vertxschematester.InvalidParamNGTest -->
      <class name="com.mycompany.vertxschematester.DefaultNotificationSubscriptionNGTest">
        <test-method signature="clearVersions()[pri:0, instance:com.mycompany.vertxschematester.DefaultNotificationSubscriptionNGTest@4566d049]" started-at="2021-07-30T13:21:42 EDT" name="clearVersions" finished-at="2021-07-30T13:21:42 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearVersions -->
        <test-method signature="removeRequiredFields()[pri:0, instance:com.mycompany.vertxschematester.DefaultNotificationSubscriptionNGTest@4566d049]" started-at="2021-07-30T13:21:42 EDT" name="removeRequiredFields" finished-at="2021-07-30T13:21:42 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeRequiredFields -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.DefaultNotificationSubscriptionNGTest@4566d049]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.DefaultNotificationSubscriptionNGTest -->
      <class name="com.mycompany.vertxschematester.LmfInfoNGTest">
        <test-method signature="ClearArraysRequiredToHaveEntries()[pri:0, instance:com.mycompany.vertxschematester.LmfInfoNGTest@5829e4f4]" started-at="2021-07-30T13:21:42 EDT" name="ClearArraysRequiredToHaveEntries" finished-at="2021-07-30T13:21:42 EDT" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[failed to validate JSON!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: failed to validate JSON!
at org.testng.Assert.fail(Assert.java:85)
at utils.TestUtil.assertSchema(TestUtil.java:68)
at com.mycompany.vertxschematester.LmfInfoNGTest.ClearArraysRequiredToHaveEntries(LmfInfoNGTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: java.util.ConcurrentModificationException
at java.base/java.util.HashMap.forEach(HashMap.java:1339)
at io.vertx.json.schema.common.SchemaRouterImpl.lambda$getScopeParentAliases$10(SchemaRouterImpl.java:215)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at io.vertx.json.schema.common.SchemaRouterImpl.getScopeParentAliases(SchemaRouterImpl.java:215)
at io.vertx.json.schema.common.SchemaRouterImpl.resolveAbsoluteUriAlternatives(SchemaRouterImpl.java:227)
at io.vertx.json.schema.common.SchemaRouterImpl.lambda$resolveCachedSchema$3(SchemaRouterImpl.java:76)
at java.base/java.util.Optional.orElseGet(Optional.java:369)
at io.vertx.json.schema.common.SchemaRouterImpl.resolveCachedSchema(SchemaRouterImpl.java:76)
at io.vertx.json.schema.common.SchemaRouterImpl.resolveRef(SchemaRouterImpl.java:105)
at io.vertx.json.schema.common.RefSchema.validateAsync(RefSchema.java:64)
at io.vertx.json.schema.common.ItemsValidatorFactory$ItemsValidator.validateAsync(ItemsValidatorFactory.java:63)
at io.vertx.json.schema.common.SchemaImpl.runAsyncValidators(SchemaImpl.java:173)
at io.vertx.json.schema.common.SchemaImpl.validateAsync(SchemaImpl.java:121)
at io.vertx.json.schema.common.PropertiesValidatorFactory$PropertiesValidator.validateAsync(PropertiesValidatorFactory.java:171)
at io.vertx.json.schema.common.SchemaImpl.runAsyncValidators(SchemaImpl.java:173)
at io.vertx.json.schema.common.SchemaImpl.validateAsync(SchemaImpl.java:121)
at io.vertx.json.schema.common.SchemaImpl.validateAsync(SchemaImpl.java:48)
at com.mycompany.vertxschematester.JsonValidatorImpl.validate(JsonValidatorImpl.java:77)
at com.mycompany.vertxschematester.JsonValidatorImpl.validate(JsonValidatorImpl.java:52)
at utils.TestUtil.assertSchema(TestUtil.java:59)
... 39 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearArraysRequiredToHaveEntries -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.LmfInfoNGTest@5829e4f4]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.LmfInfoNGTest -->
      <class name="com.mycompany.vertxschematester.MappingOfSnssaiNGTest">
        <test-method signature="removeRequiredFields()[pri:0, instance:com.mycompany.vertxschematester.MappingOfSnssaiNGTest@1b2c4efb]" started-at="2021-07-30T13:21:42 EDT" name="removeRequiredFields" finished-at="2021-07-30T13:21:42 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeRequiredFields -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.MappingOfSnssaiNGTest@1b2c4efb]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.MappingOfSnssaiNGTest -->
      <class name="com.mycompany.vertxschematester.BsfInfoNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.BsfInfoNGTest@4cf8b2dc]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.BsfInfoNGTest -->
      <class name="com.mycompany.vertxschematester.N2InterfaceAmfInfoNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.N2InterfaceAmfInfoNGTest@3cc41abc]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.N2InterfaceAmfInfoNGTest -->
      <class name="com.mycompany.vertxschematester.Ipv6PrefixRangeNGTest">
        <test-method signature="removeEnd()[pri:0, instance:com.mycompany.vertxschematester.Ipv6PrefixRangeNGTest@7f6f61c8]" started-at="2021-07-30T13:21:42 EDT" name="removeEnd" finished-at="2021-07-30T13:21:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeEnd -->
        <test-method signature="removeStart()[pri:0, instance:com.mycompany.vertxschematester.Ipv6PrefixRangeNGTest@7f6f61c8]" started-at="2021-07-30T13:21:42 EDT" name="removeStart" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeStart -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.Ipv6PrefixRangeNGTest@7f6f61c8]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.Ipv6PrefixRangeNGTest -->
      <class name="com.mycompany.vertxschematester.IdentityRangeNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.IdentityRangeNGTest@7c1e2a2d]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.IdentityRangeNGTest -->
      <class name="com.mycompany.vertxschematester.AmfCondNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.AmfCondNGTest@5cbe877d]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.AmfCondNGTest -->
      <class name="com.mycompany.vertxschematester.DnnUpfInfoItemNGTest">
        <test-method signature="ClearArraysRequiredToHaveEntries()[pri:0, instance:com.mycompany.vertxschematester.DnnUpfInfoItemNGTest@5c08c46a]" started-at="2021-07-30T13:21:42 EDT" name="ClearArraysRequiredToHaveEntries" finished-at="2021-07-30T13:21:42 EDT" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearArraysRequiredToHaveEntries -->
        <test-method signature="removeServiceName()[pri:0, instance:com.mycompany.vertxschematester.DnnUpfInfoItemNGTest@5c08c46a]" started-at="2021-07-30T13:21:42 EDT" name="removeServiceName" finished-at="2021-07-30T13:21:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeServiceName -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.DnnUpfInfoItemNGTest@5c08c46a]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.DnnUpfInfoItemNGTest -->
      <class name="com.mycompany.vertxschematester.Ipv4AddressRangeNGTest">
        <test-method signature="removeEnd()[pri:0, instance:com.mycompany.vertxschematester.Ipv4AddressRangeNGTest@1c3b9394]" started-at="2021-07-30T13:21:42 EDT" name="removeEnd" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeEnd -->
        <test-method signature="removeStart()[pri:0, instance:com.mycompany.vertxschematester.Ipv4AddressRangeNGTest@1c3b9394]" started-at="2021-07-30T13:21:42 EDT" name="removeStart" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeStart -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.Ipv4AddressRangeNGTest@1c3b9394]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.Ipv4AddressRangeNGTest -->
      <class name="com.mycompany.vertxschematester.BindingRespNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.BindingRespNGTest@ccb4b1b]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.BindingRespNGTest -->
      <class name="com.mycompany.vertxschematester.AudienceNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.AudienceNGTest@c35172e]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.AudienceNGTest -->
      <class name="com.mycompany.vertxschematester.IpEndPointNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.IpEndPointNGTest@4c2cc639]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.IpEndPointNGTest -->
      <class name="com.mycompany.vertxschematester.InternalGroupIdRangeNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.InternalGroupIdRangeNGTest@333dd51e]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.InternalGroupIdRangeNGTest -->
      <class name="com.mycompany.vertxschematester.LinkNGTest">
        <test-method signature="removeHref()[pri:0, instance:com.mycompany.vertxschematester.LinkNGTest@3668d4]" started-at="2021-07-30T13:21:42 EDT" name="removeHref" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeHref -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.LinkNGTest@3668d4]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.LinkNGTest -->
      <class name="com.mycompany.vertxschematester.ChfInfoListNGTest">
        <test-method signature="InvalidAdditionalProperties()[pri:0, instance:com.mycompany.vertxschematester.ChfInfoListNGTest@2a5b3fee]" started-at="2021-07-30T13:21:42 EDT" name="InvalidAdditionalProperties" finished-at="2021-07-30T13:21:42 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidAdditionalProperties -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.ChfInfoListNGTest@2a5b3fee]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
        <test-method signature="validateMinItems()[pri:0, instance:com.mycompany.vertxschematester.ChfInfoListNGTest@2a5b3fee]" started-at="2021-07-30T13:21:42 EDT" name="validateMinItems" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMinItems -->
      </class> <!-- com.mycompany.vertxschematester.ChfInfoListNGTest -->
      <class name="com.mycompany.vertxschematester.AccessTokenRspNGTest">
        <test-method signature="removeAccessToken()[pri:0, instance:com.mycompany.vertxschematester.AccessTokenRspNGTest@61ce23ac]" started-at="2021-07-30T13:21:42 EDT" name="removeAccessToken" finished-at="2021-07-30T13:21:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeAccessToken -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.AccessTokenRspNGTest@61ce23ac]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
        <test-method signature="removeTokenType()[pri:0, instance:com.mycompany.vertxschematester.AccessTokenRspNGTest@61ce23ac]" started-at="2021-07-30T13:21:42 EDT" name="removeTokenType" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTokenType -->
      </class> <!-- com.mycompany.vertxschematester.AccessTokenRspNGTest -->
      <class name="com.mycompany.vertxschematester.InterfaceUpfInfoItemNGTest">
        <test-method signature="removeInterfaceType()[pri:0, instance:com.mycompany.vertxschematester.InterfaceUpfInfoItemNGTest@c2db68f]" started-at="2021-07-30T13:21:42 EDT" name="removeInterfaceType" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeInterfaceType -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.InterfaceUpfInfoItemNGTest@c2db68f]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.InterfaceUpfInfoItemNGTest -->
      <class name="com.mycompany.vertxschematester.AfEventExposureDataNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.AfEventExposureDataNGTest@ec2cc4]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.AfEventExposureDataNGTest -->
      <class name="com.mycompany.vertxschematester.ImsiRangeNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.ImsiRangeNGTest@4bff64c2]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.ImsiRangeNGTest -->
      <class name="com.mycompany.vertxschematester.DnnSmfInfoItemNGTest">
        <test-method signature="removeDnn()[pri:0, instance:com.mycompany.vertxschematester.DnnSmfInfoItemNGTest@6f2cfcc2]" started-at="2021-07-30T13:21:42 EDT" name="removeDnn" finished-at="2021-07-30T13:21:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeDnn -->
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.DnnSmfInfoItemNGTest@6f2cfcc2]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- com.mycompany.vertxschematester.DnnSmfInfoItemNGTest -->
      <class name="com.mycompany.vertxschematester.AccessTokenErrNGTest">
        <test-method signature="validate()[pri:0, instance:com.mycompany.vertxschematester.AccessTokenErrNGTest@4097cac]" started-at="2021-07-30T13:21:42 EDT" name="validate" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
        <test-method signature="removeError()[pri:0, instance:com.mycompany.vertxschematester.AccessTokenErrNGTest@4097cac]" started-at="2021-07-30T13:21:42 EDT" name="removeError" finished-at="2021-07-30T13:21:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeError -->
      </class> <!-- com.mycompany.vertxschematester.AccessTokenErrNGTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
